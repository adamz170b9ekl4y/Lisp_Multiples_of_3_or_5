(defun isprime(n)
(setq flag 1)
(setq x 2)
(setq sqroot (floor (sqrt n)))
(if (= n 2)
    (return-from isprime 1)
 )
(if (= n 1)
    (return-from isprime 0)
    )
(loop 
(if (= (mod n x) 0)
		(return-from isprime 0)
	)
(setq x (+ x 1))
(when (> x sqroot) (return flag))
)
)

(defun iswhole(n)
(setq var1 (ceiling n))
(setq var2 (floor n))
(if (= var1 var2)
(return-from iswhole 1)
)
(return-from iswhole 0)
)

(setq start 600851475143)
(setq temp start)
(setq y 1)
(setq z 0)
(loop
 (setq temp2 (/ temp y))
 (setq temp3 (isprime y))
 (setq temp4 (iswhole temp2))
 (setq temp5 (isprime temp))
  (if (and (= temp3 1)
         (= temp4 1))
	(setq temp temp2)
    )
 (setq temp5 (isprime temp))
 (if (= temp5 1)
     (return y)
     )
 (setq y (+ y 1))
 (setq z (+ z 1))
 (when (> y temp) (return y))
 )
 (princ "The largest prime factor of 600851475143 is: ")
(write temp)
(terpri)
(princ "The total number of cycles to find that value is: ")
(write z)